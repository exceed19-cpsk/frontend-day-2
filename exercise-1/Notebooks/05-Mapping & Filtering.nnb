{
    "cells": [
        {
            "language": "markdown",
            "source": [
                "# Part 5 - Mapping & Filtering\r\n\r\nหลังจากเข้าใจ Concept ของตัว Callback Function แล้วเราจะมาใช้ Method ของ Array ที่ใช้สำหรับ\r\nการสร้าง Array ใหม่จาก Array เดิม ที่มีประโยชน์มากๆนั่นคือการ \"Map\" และการ \"Filter\" นั่นเอง\r\nถ้าเคยเขียน Python มาเนี่ย 2 อย่างนี้ จะคล้ายๆ กับการทำ List Comprehension (`[i for i in range(10)]`)"
            ],
            "outputs": []
        },
        {
            "language": "javascript",
            "source": [
                "const data = ['ant','bird','cat','dog','egg']"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.stdout",
                            "value": [
                                "",
                                ""
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "จากข้อมูลข้างบน ถ้าเราอยากจะสร้าง Array ใหม่ ที่มีข้อมูลคล้ายเดิม เพียงแต่ตัวอักษรแรกเป็นตัวพิมพ์ใหญ่เราจะทำได้อย่างไร"
            ],
            "outputs": []
        },
        {
            "language": "javascript",
            "source": [
                "let new_data = []\r\nfor(let i=0;i<data.length;i++){\r\n    new_data.push(data[i][0].toUpperCase() + data[i].slice(1))\r\n}\r\nconsole.log(new_data)"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.stdout",
                            "value": [
                                "[ 'Ant', 'Bird', 'Cat', 'Dog', 'Egg' ]",
                                "",
                                ""
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "เราสามารถลดรูปการเขียนข้างต้นได้ โดยใช้ Method ของ Array ที่เรียกว่าการ \"Mapping\""
            ],
            "outputs": []
        },
        {
            "language": "javascript",
            "source": [
                "let new_data = data.map((text) => (text[0].toUpperCase() + text.slice(1)))\r\nconsole.log(new_data)"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.stdout",
                            "value": [
                                "[ 'Ant', 'Bird', 'Cat', 'Dog', 'Egg' ]",
                                "",
                                ""
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "## 5.1 - Array Mapping"
            ],
            "outputs": []
        },
        {
            "language": "javascript",
            "source": [
                "const data = ['ant','bird','cat','dog','egg']"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.stdout",
                            "value": [
                                "",
                                ""
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "javascript",
            "source": [
                "let map_1 = data.map((a) => (a))\r\nconsole.log(map_1)"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.stdout",
                            "value": [
                                "[ 'ant', 'bird', 'cat', 'dog', 'egg' ]",
                                "",
                                ""
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "คิดว่าการที่ `<Array>.map()` นั้นทำอะไรกันนะ (ตรงนี้อาจจะยังไม่เห็นภาพ)"
            ],
            "outputs": []
        },
        {
            "language": "javascript",
            "source": [
                "let map_2 = data.map((a) => (a + 'Extra'))\r\nconsole.log(map_2)"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.stdout",
                            "value": [
                                "[ 'antExtra', 'birdExtra', 'catExtra', 'dogExtra', 'eggExtra' ]",
                                "",
                                ""
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "**[QUESTION]** ประมาณนี้พอตอบได้รึยังว่ามันน่าจะทำอะไร (ว่าแต่ทำไม Function เขียนโดยใช้วงเล็บแบบ `(a)` แทนที่จะเป็น `{return a}` พอจำได้ไหมว่าคืออะไร)  "
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "**[QUESTION]** คิดว่าตัวแปร `a` น่าจะหมายถึงอะไรใน Array `data` และถ้าเปลี่ยน `a` เป็นตัวอื่นจะยังได้ค่าเดิมอยู่ไหม"
            ],
            "outputs": []
        },
        {
            "language": "javascript",
            "source": [
                "let map_3 = data.map((a,b) => (b))\r\nconsole.log(map_3)"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.stdout",
                            "value": [
                                "[ 0, 1, 2, 3, 4 ]",
                                "",
                                ""
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "คิดว่าตัวแปร `b` น่าจะหมายถึงอะไรใน Array `data` และถ้าเปลี่ยน `b` เป็นตัวอื่นจะยังได้ค่าเดิมอยู่ไหม"
            ],
            "outputs": []
        },
        {
            "language": "javascript",
            "source": [
                "let map_4 = data.map((a,b,c) => (c))\r\nconsole.log(map_4)"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.stdout",
                            "value": [
                                "[",
                                "  [ 'ant', 'bird', 'cat', 'dog', 'egg' ],",
                                "  [ 'ant', 'bird', 'cat', 'dog', 'egg' ],",
                                "  [ 'ant', 'bird', 'cat', 'dog', 'egg' ],",
                                "  [ 'ant', 'bird', 'cat', 'dog', 'egg' ],",
                                "  [ 'ant', 'bird', 'cat', 'dog', 'egg' ]",
                                "]",
                                "",
                                ""
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "**[QUESTION]** คิดว่าตัวแปร `c` น่าจะหมายถึงอะไรใน Array `data` และถ้าเปลี่ยน `c` เป็นตัวอื่นจะยังได้ค่าเดิมอยู่ไหม"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "**[QUESTION]** ถ้าเรามองว่า `.map(`) เป็น Callback Function คิดว่ามันทำงานอย่างไรบ้าง"
            ],
            "outputs": []
        },
        {
            "language": "javascript",
            "source": [
                "function capitalLetter(text){\r\n    return text[0].toUpperCase() + text.slice(1)\r\n}\r\n\r\nconsole.log(\r\n    capitalLetter(\"hello\"),\r\n    capitalLetter(\"i\"),\r\n    capitalLetter(\"okay\")\r\n)"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.stdout",
                            "value": [
                                "Hello I Okay",
                                "",
                                ""
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "**[QUESTION]** คิดว่า `capitalLetter()` มีหน้าที่ทำอะไร"
            ],
            "outputs": []
        },
        {
            "language": "javascript",
            "source": [
                "let map_5 = data.map(capitalLetter)\r\nconsole.log(map_5)"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.stdout",
                            "value": [
                                "[ 'Ant', 'Bird', 'Cat', 'Dog', 'Egg' ]",
                                "",
                                ""
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "**[QUESTION]** คิดว่าทำไมผลลัพธ์จึงเป็นเช่นนั้น"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "### Exercise\r\nลองใช้ Method `.map()` เพื่อสร้าง Array ใหม่จาก `data` ตามที่กำหนดให้"
            ],
            "outputs": []
        },
        {
            "language": "javascript",
            "source": [
                "const data = ['ant','bird','cat','dog','egg']"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.stdout",
                            "value": [
                                "",
                                ""
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "**#1**  \r\n`[ 'a', 'b', 'c', 'd', 'e' ]`"
            ],
            "outputs": []
        },
        {
            "language": "javascript",
            "source": [
                "console.log(data.map(value => value[0]))"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.stdout",
                            "value": [
                                "[ 'a', 'b', 'c', 'd', 'e' ]",
                                "",
                                ""
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "**#2**  \r\n`[ 3, 4, 3, 3, 3 ]`"
            ],
            "outputs": []
        },
        {
            "language": "javascript",
            "source": [
                "console.log(data.map(value => value.length))"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.stdout",
                            "value": [
                                "[ 3, 4, 3, 3, 3 ]",
                                "",
                                ""
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "**#3**  \r\n`[ 0, 2, 4, 6, 8 ]`"
            ],
            "outputs": []
        },
        {
            "language": "javascript",
            "source": [
                "console.log(data.map((value,index) => index*2))"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.stdout",
                            "value": [
                                "[ 0, 2, 4, 6, 8 ]",
                                "",
                                ""
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "**#4**  \r\n`[ true, false, true, false, true ]`"
            ],
            "outputs": []
        },
        {
            "language": "javascript",
            "source": [
                "console.log(data.map((value,index) => index % 2 === 0))"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.stdout",
                            "value": [
                                "[ true, true, true, true, true ]",
                                "",
                                ""
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "**#5**  \r\n`[ '1) ant', '2) bird', '3) cat', '4) dog', '5) egg' ]`"
            ],
            "outputs": []
        },
        {
            "language": "javascript",
            "source": [
                "console.log(data.map((value,index) => `${index+1}) ${value}`))"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.stdout",
                            "value": [
                                "[ '1) ant', '2) bird', '3) cat', '4) dog', '5) egg' ]",
                                "",
                                ""
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "**#6**  \r\n```\r\n[\r\n    [ 'ant', 'bird', 'cat', 'dog', 'egg', 'ant' ],\r\n    [ 'ant', 'bird', 'cat', 'dog', 'egg', 'bird' ],\r\n    [ 'ant', 'bird', 'cat', 'dog', 'egg', 'cat' ],\r\n    [ 'ant', 'bird', 'cat', 'dog', 'egg', 'dog' ],\r\n    [ 'ant', 'bird', 'cat', 'dog', 'egg', 'egg' ]\r\n]\r\n```\r\n**[HINT]** Spread Operator (`...`)"
            ],
            "outputs": []
        },
        {
            "language": "javascript",
            "source": [
                "console.log(data.map((value,index,array) => [...array,value]))"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.stdout",
                            "value": [
                                "[",
                                "  [ 'ant', 'bird', 'cat', 'dog', 'egg', 'ant' ],",
                                "  [ 'ant', 'bird', 'cat', 'dog', 'egg', 'bird' ],",
                                "  [ 'ant', 'bird', 'cat', 'dog', 'egg', 'cat' ],",
                                "  [ 'ant', 'bird', 'cat', 'dog', 'egg', 'dog' ],",
                                "  [ 'ant', 'bird', 'cat', 'dog', 'egg', 'egg' ]",
                                "]",
                                "",
                                ""
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "## 5.2 - Array Filtering\r\n\r\nหลังจากที่เราได้ลองการใช้ตัว `.map()` ไปแล้ว ต่อไปเราจะมาลองใช้อีกหนึ่ง method ที่สำคัญไม่แพ้กัน  \r\nนั่นคือ `.filter()` นั่นเอง โดยตัว filter เนี่ย มันจะทำหน้าที่กรองข้อมูลใน Array ที่มีเงื่อนตรง  \r\nกับที่เรากำหนดไว้เท่านั้น และคืนค่ากลับมาเป็น Array ใหม่ให้  \r\n  \r\nหากเทียบกับในภาษา python  \r\n`[i*2 for i in range(10) if i%2 == 0]`  \r\nตรง `i*2` ก็คือ `.map()` ส่วน `if i%2 == 0` ก็คือการ `.filter()` นั่นเอง  "
            ],
            "outputs": []
        },
        {
            "language": "javascript",
            "source": [
                "const data = ['ant','bird','cat','dog','egg']"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.stdout",
                            "value": [
                                "",
                                ""
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "javascript",
            "source": [
                "console.log(data.filter(value => true))"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.stdout",
                            "value": [
                                "[ 'ant', 'bird', 'cat', 'dog', 'egg' ]",
                                "",
                                ""
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "**[QUESTION]** คิดว่าการที่ `<Array>.filter()` นั้นทำอะไรกันนะ (ตรงนี้อาจจะยังไม่เห็นภาพ)"
            ],
            "outputs": []
        },
        {
            "language": "javascript",
            "source": [
                "console.log(data.filter(value => false))"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.stdout",
                            "value": [
                                "[]",
                                "",
                                ""
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "ตอนนี้น่าจะรู้แล้ว"
            ],
            "outputs": []
        },
        {
            "language": "javascript",
            "source": [
                "console.log(data.filter((value,index) => index % 2 === 0))"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.stdout",
                            "value": [
                                "[ 'ant', 'cat', 'egg' ]",
                                "",
                                ""
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "**[QUESTION]** ทำไมจึงได้ผลลัพธ์เป็นแบบนี้"
            ],
            "outputs": []
        },
        {
            "language": "javascript",
            "source": [
                "console.log(data.filter((value) => value === 'ant'))"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.stdout",
                            "value": [
                                "[ 'ant' ]",
                                "",
                                ""
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "javascript",
            "source": [
                "console.log(data.filter((value,index) => index === 2))"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.stdout",
                            "value": [
                                "[ 'cat' ]",
                                "",
                                ""
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "javascript",
            "source": [
                "console.log(data.filter((value,index,array) => array.length === 5))"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.stdout",
                            "value": [
                                "[ 'ant', 'bird', 'cat', 'dog', 'egg' ]",
                                "",
                                ""
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "**[QUESTION]** คิดว่าตัว Parameter ทั้ง 3 ตัว `(value,index,array)` แต่ละตัวทำหน้าที่เหมือนกับ ตอนที่เราใส่ใน `.map()` ไหม"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "**[QUESTION]** ทีนี้เนื่องจากทั้ง `.filter()` และ `.map()` จะคืนค่ากลับมาเป็น Array ทำให้เราสามารถนำมาคอมโบกันได้"
            ],
            "outputs": []
        },
        {
            "language": "javascript",
            "source": [
                "console.log(data.filter((value,index) => index >= 2).map(value => value.toUpperCase()))"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.stdout",
                            "value": [
                                "[ 'CAT', 'DOG', 'EGG' ]",
                                "",
                                ""
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "javascript",
            "source": [
                "function isPrime(number){\r\n    if(number === 1){\r\n        return false\r\n    }\r\n    for(var i=2;i<number;i++){\r\n        if(number % i == 0){\r\n            return false\r\n        }\r\n    }\r\n    return true\r\n}\r\n\r\nconsole.log(\r\n    isPrime(1),\r\n    isPrime(2),\r\n    isPrime(4),\r\n    isPrime(7),\r\n    isPrime(9)\r\n)"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.stdout",
                            "value": [
                                "false true false true false",
                                "",
                                ""
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "**[QUESTION]** คิดว่า Function นี้ทำอะไรได้"
            ],
            "outputs": []
        },
        {
            "language": "javascript",
            "source": [
                "const numberArr = [2,3,8,10,15]"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.stdout",
                            "value": [
                                "",
                                ""
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "javascript",
            "source": [
                "console.log(numberArr.filter(isPrime))"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.stdout",
                            "value": [
                                "[ 2, 3 ]",
                                "",
                                ""
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "**[QUESTION]** ทำไมจึงได้ผลลัพธ์เช่นนี้"
            ],
            "outputs": []
        },
        {
            "language": "javascript",
            "source": [
                "console.log(numberArr.filter(isPrime).map(value => value + 3))"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.stdout",
                            "value": [
                                "[ 5, 6 ]",
                                "",
                                ""
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "**[QUESTION]** ทำไมจึงได้ผลลัพธ์เช่นนี้ ตอน `.filter()` เราเหลือค่าอะไรบ้าง"
            ],
            "outputs": []
        },
        {
            "language": "javascript",
            "source": [
                "console.log(numberArr.map(value => value + 3).filter(isPrime))"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.stdout",
                            "value": [
                                "[ 5, 11, 13 ]",
                                "",
                                ""
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "**[QUESTION]** ทำไมจึงได้ผลลัพธ์เช่นนี้ ตอน `.map()` ค่าถูกเปลี่ยนไปเป็นอย่างไรบ้าง"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "### Exercise\r\nในโจทย์นี้ เราจะรวมทั้ง `.map()` และ `.filter()` ไปพร้อมๆ กันเลย  \r\nลองสร้าง Array ต่อไปนี้จาก `data` ซึ่งเป็น Array ที่มีเลข 1 ถึง 50\r\nโดยใช้แค่ `map` และ `filter` เท่านั้น"
            ],
            "outputs": []
        },
        {
            "language": "javascript",
            "source": [
                "const create1to50Array = () => {\r\n    let result = []\r\n    for(var i=1;i<=50;i++){\r\n        result.push(i)\r\n    }\r\n    return result\r\n}\r\n\r\nconst data = create1to50Array()\r\nconsole.log(data)"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.stdout",
                            "value": [
                                "[",
                                "   1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11,",
                                "  12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22,",
                                "  23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33,",
                                "  34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44,",
                                "  45, 46, 47, 48, 49, 50",
                                "]",
                                "",
                                ""
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "**#1**  \r\n```\r\n[\r\n    2,  4,  6,  8, 10, 12, 14, 16,\r\n   18, 20, 22, 24, 26, 28, 30, 32,\r\n   34, 36, 38, 40, 42, 44, 46, 48,\r\n   50\r\n] \r\n```"
            ],
            "outputs": []
        },
        {
            "language": "javascript",
            "source": [
                "console.log(data.filter(v => v%2 === 0))"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.stdout",
                            "value": [
                                "[",
                                "   2,  4,  6,  8, 10, 12, 14, 16,",
                                "  18, 20, 22, 24, 26, 28, 30, 32,",
                                "  34, 36, 38, 40, 42, 44, 46, 48,",
                                "  50",
                                "]",
                                "",
                                ""
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "**#2**  \r\n```\r\n[\r\n  1, 2, 3, 4, 5,\r\n  6, 7, 8, 9\r\n]\r\n```"
            ],
            "outputs": []
        },
        {
            "language": "javascript",
            "source": [
                "console.log(data.filter(v => v < 10))"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.stdout",
                            "value": [
                                "[",
                                "  1, 2, 3, 4, 5,",
                                "  6, 7, 8, 9",
                                "]",
                                "",
                                ""
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "**#3**  \r\n```\r\n[\r\n  20, 19, 18, 17, 16,\r\n  15, 14, 13, 12, 11\r\n]\r\n```"
            ],
            "outputs": []
        },
        {
            "language": "javascript",
            "source": [
                "// console.log(data.filter(v => v <= 10).map(v => 21-v))"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.stdout",
                            "value": [
                                "",
                                ""
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "**#4**  \r\n```\r\n[\r\n    1, -3,   5, -7,   9,\r\n  -11, 13, -15, 17, -19\r\n]\r\n```"
            ],
            "outputs": []
        },
        {
            "language": "javascript",
            "source": [
                "console.log(data.filter(v => v%2 !== 0 && v < 20).map((v,i) => (-1)**i * v))"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.stdout",
                            "value": [
                                "[",
                                "    1, -3,   5, -7,   9,",
                                "  -11, 13, -15, 17, -19",
                                "]",
                                "",
                                ""
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "## 5.3 - Mapping & Filtering In Practical Use\r\n\r\nต่อมาเรามาลองใช้เรื่อง Map/Filter/Spread Operator ทำงานกับข้อมูลจริงมากขึ้น\r\nเนื่องจากโดยปกติเราที่เป็นฝั่ง Frontend จะคอยรับข้อมูลจากฝั่ง Backend\r\nเป็นแบบ JSON ซึ่งข้อมูลจะมีลักษณะเป็น Array of Object (เป็น Array ที่ข้างในมีข้อมูลเป็น Object) เหมือนด้านล่าง"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "### Exercise"
            ],
            "outputs": []
        },
        {
            "language": "javascript",
            "source": [
                "const data = [\r\n    { name:\"kana\", age:25, salary:5400 },\r\n    { name:\"gun\", age:32, salary:9300 },\r\n    { name:\"nut\", age:14, salary:2100 },\r\n    { name:\"boome\", age:19, salary:1400 },\r\n    { name:\"fluck\", age:41, salary:3000 },\r\n    { name:\"bass\", age:34, salary:11000 },\r\n    { name:\"balle\", age:29, salary:2100 },\r\n    { name:\"gitar\", age:22, salary:2400 },\r\n    { name:\"belle\", age:51, salary:7200 },\r\n    { name:\"mic\", age:49, salary:2500 },\r\n  ]"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.stdout",
                            "value": [
                                "",
                                ""
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "**#1**  \r\nสร้าง Array ใหม่จาก `data` ที่มีข้อมูลแค่สำหรับคนที่อายุเกิน `40` ปี และเพิ่มเงินเดือนเป็น `2` เท่าจากเดิม"
            ],
            "outputs": []
        },
        {
            "language": "javascript",
            "source": [
                "let result1 = data.filter(people => people.age > 40).map(people => ({\r\n    ...people,\r\n    salary: people.salary*2\r\n}))\r\nconsole.log(result1)"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.stdout",
                            "value": [
                                "[",
                                "  { name: 'fluck', age: 41, salary: 6000 },",
                                "  { name: 'belle', age: 51, salary: 14400 },",
                                "  { name: 'mic', age: 49, salary: 5000 }",
                                "]",
                                "",
                                ""
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "**OUTPUT**\r\n```\r\n[\r\n  { name: 'fluck', age: 41, salary: 6000 },\r\n  { name: 'belle', age: 51, salary: 14400 },\r\n  { name: 'mic', age: 49, salary: 5000 }\r\n]\r\n```"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "**#2**  \r\nสร้าง Array ใหม่จาก `data` ที่มีข้อมูลคนที่ขึ้นต้นด้วยตัว `\"b\"` และเงินเดือนมากกว่า `7000` และเปลี่ยนชื่อจากอักษรหน้าตัวเล็กให้เป็นตัวใหญ่"
            ],
            "outputs": []
        },
        {
            "language": "javascript",
            "source": [
                "let result2 = data.filter(people => people.name[0] === 'b' && people.salary > 7000).map(people => ({\r\n    ...people,\r\n    name: people.name[0].toUpperCase() + people.name.slice(1)\r\n}))\r\nconsole.log(result2)"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.stdout",
                            "value": [
                                "[",
                                "  { name: 'Bass', age: 34, salary: 11000 },",
                                "  { name: 'Belle', age: 51, salary: 7200 }",
                                "]",
                                "",
                                ""
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "**OUTPUT**\r\n```\r\n[\r\n  { name: 'Bass', age: 34, salary: 11000 },\r\n  { name: 'Belle', age: 51, salary: 7200 }\r\n]\r\n```"
            ],
            "outputs": []
        }
    ]
}